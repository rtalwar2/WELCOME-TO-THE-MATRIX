@startuml
autonumber

actor Gebruiker
participant MainProgram
participant TutorialPage
participant Tutorial
participant VermenigvuldigTutorial
participant OefeningPage
participant Oefeningen
participant Matrix
participant Speler
participant localStorage




== Startup Program ==

Gebruiker ->  MainProgram: Open Main
activate MainProgram

MainProgram -> MainProgram: init()



== Speler Maken ==

MainProgram -> MainProgram: spelerMaken()

MainProgram -> Gebruiker: prompt(naam?)
Gebruiker -->> MainProgram: naam

MainProgram -> Speler: Speler(naam)
activate Speler

Speler -> localStorage: getItem(naam)
activate localStorage
localStorage -->> Speler: data over speler
Speler -> Speler: saveData()
Speler -> localStorage: setItem(naam, data)
Speler -> localStorage: setItem("huidige speler", naam)

MainProgram -> Speler: getData()
Speler -->> MainProgram: Map<String,boolean>



== HTML goed genereren ==

MainProgram -> MainProgram: haalKnoppen()

MainProgram -> TutorialPage: TutorialPage.alle_beschrijvingen
activate TutorialPage
TutorialPage-->>MainProgram: returns alle_beschrijvingen

MainProgram -> OefeningPage: OefeningPage.alle_oefeningen
activate OefeningPage
OefeningPage-->>MainProgram: returns alle_oefeningen

MainProgram -->> MainProgram: generate html page



== Kies Deelsysteem ==

Gebruiker -> MainProgram: Kiest Deelsysteem

MainProgram -> MainProgram: ListenToKnop(event)
MainProgram -> localStorage: setItem("selected_button", naam deelsysteem)


opt  if deelsysteem is een Tutorial
        MainProgram -> TutorialPage: open TutorialPage
        TutorialPage -->> TutorialPage: generate html page
    
     else if deelsysteem is een Oefening
        MainProgram -> OefeningPage: open OefeningPage
        OefeningPage -->> OefeningPage: generate html page

end
deactivate MainProgram



== Tutorials  ==
deactivate OefeningPage

TutorialPage -> TutorialPage: init()

TutorialPage -> localStorage: getItem("selected_button")
localStorage -->> TutorialPage: naam deelsysteem

TutorialPage -> TutorialPage: startTutorial(naam deelsysteem, 0)

opt  if deelsysteem is VermenigvuldigTutorial

        loop subtutorial


            TutorialPage -> Matrix: new Matrix(3, 3)
            activate Matrix
            TutorialPage -> Matrix: new Matrix(3, 3)

            Matrix -->> TutorialPage: Matrix1
            Matrix -->> TutorialPage: Matrix2

            TutorialPage -> VermenigvuldigTutorial: new VermenigvuldigTutorial(Matrix1, Matrix2)
            activate VermenigvuldigTutorial

            VermenigvuldigTutorial -> Tutorial: constructor()
            activate Tutorial
            Tutorial -->> VermenigvuldigTutorial: constructor

            VermenigvuldigTutorial -> Matrix: new Matrix(.,.,"0")
            Matrix -->> VermenigvuldigTutorial: "0" Matrix


    '        TutorialPage -> Matrix: new Matrix(2, 2)
    '        TutorialPage -> Matrix: new Matrix(2, 4)
    '
    '        Matrix -->> TutorialPage: Matrix3
    '        Matrix -->> TutorialPage: Matrix4
    '
    '        TutorialPage -> VermenigvuldigTutorial: new VermenigvuldigTutorial(Matrix3, Matrix4)
    '        VermenigvuldigTutorial -> Tutorial: constructor()
    '        Tutorial -->> VermenigvuldigTutorial: constructor
    '
    '        VermenigvuldigTutorial -> Matrix: new Matrix(.,.,"0")
    '        Matrix -->> VermenigvuldigTutorial: "0" Matrix

            loop foreach tutorial.matrices[i]
                    TutorialPage -> VermenigvuldigTutorial: matrices[i]
                    VermenigvuldigTutorial -> Tutorial: matrices[i]
                    Tutorial -->> VermenigvuldigTutorial: matrices[i]
                    VermenigvuldigTutorial -->> TutorialPage: matrices[i]

                    TutorialPage -> Matrix: drawMatrix(.)

            end

            TutorialPage -> TutorialPage: showDescription()
            TutorialPage -> localStorage: getItem("selected_button")
            localStorage -->> TutorialPage: naam deelsysteem
            TutorialPage -> localStorage: getItem("selected_button")
            localStorage -->> TutorialPage: naam deelsysteem

            loop while niet laatste stap
                opt nextStep
                    Gebruiker -> TutorialPage: klik op next

                    TutorialPage -> TutorialPage: ListenToKnop(event)
                    TutorialPage -> TutorialPage: changeStep()

                    TutorialPage -> VermenigvuldigTutorial: refresh(tutorialPage)
                    VermenigvuldigTutorial -->> TutorialPage: {finished:., data:., tekst:.}

                    TutorialPage -> Matrix: drawMatrix(.)
                    TutorialPage -> TutorialPage: updateBeschrijving(.)

                end
            end

            TutorialPage -> localStorage: getItem("selected_button")
            localStorage -->> TutorialPage: naam deelsysteem

            TutorialPage -> TutorialPage: nextTutorial()

        end

        TutorialPage -> TutorialPage: endTutorial()

        TutorialPage -> localStorage: getItem("selected_button")
        localStorage -->> TutorialPage: naam deelsysteem

        TutorialPage -> localStorage: getItem("huidige speler")
        localStorage -->> TutorialPage: huidige speler

        TutorialPage -> Speler: new Speler(spelernaam)

        Speler -> localStorage: getItem(naam)
        localStorage -->> Speler: data over speler
        Speler -> localStorage: setItem("huidige speler", naam)

        TutorialPage -> localStorage: getItem("selected_button")
        localStorage -->> TutorialPage: naam deelsysteem

        TutorialPage -> Speler: eindTutorialOefening(naam deelsysteem)
        Speler -> Speler: saveData()
        Speler -> localStorage: setItem(naam, data)

end


'Tot hier ===========================================================


opt gebruiker pressed oefening button
    TutorialPage->OefeningPage:target button
    activate OefeningPage
   else  gebruiker pressed main button
   TutorialPage->MainProgram
 activate MainProgram
end
TutorialPage->Speler:eindTutorialOefening(Tutorial naam)
deactivate MainProgram
deactivate TutorialPage
deactivate Tutorial







== Oefeningen == 

OefeningPage-> Oefeningen: aantalOefeningen
activate Oefeningen
loop foreach oefening in Oefeningen
Oefeningen -> Matrix: genereer matrices
Matrix -->> Oefeningen: return matrices
Oefeningen -->> OefeningPage: return matrices voor oefening
Gebruiker -> OefeningPage: invoer gebruiker
OefeningPage -> Oefeningen: Correct(input:int)
Oefeningen -> Matrix: [vermenigvuldigMatrix(matrix_2),getDeterminant(),getInverse(),getTransponneerde()]
Matrix -->> Oefeningen: return oplossing
Oefeningen -->> OefeningPage: boolean
OefeningPage -->> OefeningPage: update html
' Gebruiker->OefeningPage:hint pressed
' OefeningPage->Oefeningen:show hint
' Oefeningen-->>OefeningPage: return hint
end
OefeningPage->OefeningPage:update buttons

opt gebruiker pressed Tutorial button
    TutorialPage<-OefeningPage:target button
    activate TutorialPage
   else  gebruiker pressed main button
   OefeningPage->MainProgram
 activate MainProgram
end

OefeningPage->Speler:eindTutorialOefening(Oefening naam)
deactivate TutorialPage
deactivate OefeningPage
deactivate Oefeningen
==einde programma==
deactivate Matrix
deactivate Speler
deactivate TutorialPage
deactivate Tutorial
deactivate OefeningPage
deactivate Oefeningen
deactivate MainProgram
@enduml

